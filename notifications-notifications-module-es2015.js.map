{"version":3,"sources":["./src/app/notifications/notifications.page.html","./src/app/notifications/notifications-routing.module.ts","./src/app/notifications/notifications.module.ts","./src/app/notifications/notifications.page.scss","./src/app/notifications/notifications.page.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Notifications</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n<ion-list *ngFor=\\\"let notification of myNotification\\\">\\n  <ion-item-sliding >\\n    <ion-item (click)=\\\"updateNotification(notification)\\\">\\n      <ion-note style=\\\"margin-top: -45px\\\" slot=\\\"end\\\">\\n        {{notification.time}}  \\n      </ion-note>\\n      <ion-label>\\n        <h2 style=\\\"color:rgb(255, 75, 4);font-weight: bold;\\\">{{notification.title}}</h2>\\n        <ion-row>\\n          <p style=\\\"font-weight: bold; color: black;\\\">{{notification.body}}&nbsp;</p>\\n        </ion-row>\\n        \\n        <p>check it out</p>\\n      </ion-label>\\n      \\n    </ion-item>\\n    <ion-item-options side=\\\"end\\\">\\n      <ion-item-option style=\\\"background-color:rgb(255, 75, 4) ;\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\" (click)=\\\"deleteNotification(notification)\\\"></ion-icon>\\n      </ion-item-option>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationsPageRoutingModule\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { WebsocketService } from \"../Services/websocket.service\";\nimport { AppSettings } from \"../Settings/AppSettings\";\nimport {\n  AlertController,\n  ToastController,\n  ModalController,\n  LoadingController,\n} from \"@ionic/angular\";\nimport { NotificationdetailComponent } from \"../notificationdetail/notificationdetail.component\";\nimport { NotificationService } from \"../Services/notification.service\";\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"./notifications.page.html\",\n  styleUrls: [\"./notifications.page.scss\"],\n})\nexport class NotificationsPage implements OnInit {\n  myNotification: any = [];\n  notificationBadge: any = 0;\n\n  stompClient = this.webSocketService.connect();\n  constructor(\n    private notificationService: NotificationService,\n    private webSocketService: WebsocketService,\n    private modalController: ModalController\n  ) {}\n\n  ngOnInit() {\n    this.getNotification();\n    this.notificationBadge = +1;\n    console.log(this.notificationBadge);\n    this.notificationService.getNotifsByUser().subscribe((data) => {\n      data.forEach((element) => {\n        this.myNotification.push(element);\n      });\n    });\n  }\n\n  doRefresh(event){\n    console.log('Begin async operation');\n    this.getNotification();\n    \n    setTimeout(() => {\n      console.log('Async operation has ended');\n      event.target.complete();\n    }, 2000);\n  }\n\n  getNotification() {\n    let that = this;\n    console.log(AppSettings.details.username.toString());\n    this.stompClient.connect(\n      { user: AppSettings.details.username.toString() },\n      function (frame) {\n        that.stompClient.subscribe(\"/user/queue/reply\", function (message) {\n          let notifId = JSON.parse(message.body).idNotification\n          let index = that.myNotification.findIndex(x => x.idNotification === notifId);\n          let result = that.myNotification.find(obj => {\n            return obj.idNotification === JSON.parse(message.body).idNotification\n          })\n          if(result === undefined ){\n            that.myNotification.push(JSON.parse(message.body));\n          }else{\n            var foundIndex = that.myNotification.findIndex(item => item.idNotification == result.idNotification);\n            that.myNotification[foundIndex].seen = 1\n            that.myNotification[foundIndex] = JSON.parse(message.body)\n          }\n         \n        });\n      }\n    );\n    console.log(this.notificationBadge);\n  }\n\n  \n  deleteNotification(notification) {\n    let index = this.myNotification.findIndex(\n      (obj) => obj.idNotification === notification.idNotification\n    );\n    this.notificationService\n      .deleteNotificationById(notification.idNotification)\n      .subscribe((data: any) => {\n        this.myNotification.splice(index, 1);\n      });\n  }\n\n  updateNotification(notificationToUpdate){\n    notificationToUpdate.isSeen=1;\n    this.notificationService.updateNotification(notificationToUpdate.idNotification,AppSettings.details.id).subscribe((data: any) =>{\n        console.log(data)\n    })\n  }\n}\n"],"sourceRoot":"webpack:///"}