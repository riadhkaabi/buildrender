{"version":3,"sources":["webpack:///src/app/notifications/notifications.page.html","webpack:///src/app/notifications/notifications-routing.module.ts","webpack:///src/app/notifications/notifications.module.ts","webpack:///src/app/notifications/notifications.page.scss","webpack:///src/app/notifications/notifications.page.ts"],"names":["routes","path","component","NotificationsPageRoutingModule","imports","forChild","exports","NotificationsPageModule","declarations","NotificationsPage","notificationService","webSocketService","modalController","myNotification","notificationBadge","stompClient","connect","getNotification","console","log","getNotifsByUser","subscribe","data","forEach","element","push","event","setTimeout","target","complete","that","details","username","toString","user","frame","message","notifId","JSON","parse","body","idNotification","index","findIndex","x","result","find","obj","undefined","foundIndex","item","seen","notification","deleteNotificationById","splice","notificationToUpdate","isSeen","updateNotification","id","selector","template"],"mappings":"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","file":"notifications-notifications-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Notifications</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n<ion-list *ngFor=\\\"let notification of myNotification\\\">\\n  <ion-item-sliding >\\n    <ion-item (click)=\\\"updateNotification(notification)\\\">\\n      <ion-note style=\\\"margin-top: -45px\\\" slot=\\\"end\\\">\\n        {{notification.time}}  \\n      </ion-note>\\n      <ion-label>\\n        <h2 style=\\\"color:rgb(255, 75, 4);font-weight: bold;\\\">{{notification.title}}</h2>\\n        <ion-row>\\n          <p style=\\\"font-weight: bold; color: black;\\\">{{notification.body}}&nbsp;</p>\\n        </ion-row>\\n        \\n        <p>check it out</p>\\n      </ion-label>\\n      \\n    </ion-item>\\n    <ion-item-options side=\\\"end\\\">\\n      <ion-item-option style=\\\"background-color:rgb(255, 75, 4) ;\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\" (click)=\\\"deleteNotification(notification)\\\"></ion-icon>\\n      </ion-item-option>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationsPageRoutingModule\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { WebsocketService } from \"../Services/websocket.service\";\nimport { AppSettings } from \"../Settings/AppSettings\";\nimport {\n  AlertController,\n  ToastController,\n  ModalController,\n  LoadingController,\n} from \"@ionic/angular\";\nimport { NotificationdetailComponent } from \"../notificationdetail/notificationdetail.component\";\nimport { NotificationService } from \"../Services/notification.service\";\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"./notifications.page.html\",\n  styleUrls: [\"./notifications.page.scss\"],\n})\nexport class NotificationsPage implements OnInit {\n  myNotification: any = [];\n  notificationBadge: any = 0;\n\n  stompClient = this.webSocketService.connect();\n  constructor(\n    private notificationService: NotificationService,\n    private webSocketService: WebsocketService,\n    private modalController: ModalController\n  ) {}\n\n  ngOnInit() {\n    this.getNotification();\n    this.notificationBadge = +1;\n    console.log(this.notificationBadge);\n    this.notificationService.getNotifsByUser().subscribe((data) => {\n      data.forEach((element) => {\n        this.myNotification.push(element);\n      });\n    });\n  }\n\n  doRefresh(event){\n    console.log('Begin async operation');\n    this.getNotification();\n    \n    setTimeout(() => {\n      console.log('Async operation has ended');\n      event.target.complete();\n    }, 2000);\n  }\n\n  getNotification() {\n    let that = this;\n    console.log(AppSettings.details.username.toString());\n    this.stompClient.connect(\n      { user: AppSettings.details.username.toString() },\n      function (frame) {\n        that.stompClient.subscribe(\"/user/queue/reply\", function (message) {\n          let notifId = JSON.parse(message.body).idNotification\n          let index = that.myNotification.findIndex(x => x.idNotification === notifId);\n          let result = that.myNotification.find(obj => {\n            return obj.idNotification === JSON.parse(message.body).idNotification\n          })\n          if(result === undefined ){\n            that.myNotification.push(JSON.parse(message.body));\n          }else{\n            var foundIndex = that.myNotification.findIndex(item => item.idNotification == result.idNotification);\n            that.myNotification[foundIndex].seen = 1\n            that.myNotification[foundIndex] = JSON.parse(message.body)\n          }\n         \n        });\n      }\n    );\n    console.log(this.notificationBadge);\n  }\n\n  \n  deleteNotification(notification) {\n    let index = this.myNotification.findIndex(\n      (obj) => obj.idNotification === notification.idNotification\n    );\n    this.notificationService\n      .deleteNotificationById(notification.idNotification)\n      .subscribe((data: any) => {\n        this.myNotification.splice(index, 1);\n      });\n  }\n\n  updateNotification(notificationToUpdate){\n    notificationToUpdate.isSeen=1;\n    this.notificationService.updateNotification(notificationToUpdate.idNotification,AppSettings.details.id).subscribe((data: any) =>{\n        console.log(data)\n    })\n  }\n}\n"]}